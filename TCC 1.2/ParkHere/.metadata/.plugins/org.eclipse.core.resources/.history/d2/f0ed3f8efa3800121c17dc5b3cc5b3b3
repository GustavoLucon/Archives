package com.parkhere.main;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.graphics.Path;
import android.graphics.Point;
import android.location.Address;
import android.location.Geocoder;
import android.net.Uri;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.widget.EditText;

import com.google.android.maps.GeoPoint;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;
import com.google.android.maps.Overlay;
import com.google.android.maps.OverlayItem;
import com.google.android.maps.Projection;
import com.parkhere.R;
import com.parkhere.model.Marcador;
import com.parkhere.overlay.AreaOverlay;
import com.parkhere.overlay.ListaMarcadorOverlay;

public class ParkHereActivity extends MapActivity {
	
	private Context contexto;
	private MapView mapa;
	private MapController controle;
	
	
    @Override
    public void onCreate( Bundle savedInstanceState ) {
        super.onCreate( savedInstanceState );
        setContentView( R.layout.park_here_activity );
    }
    
    
    public void buscar (View v)
    {
    	EditText campoEndereco = (EditText) findViewById(R.id.campoEndereco);
    	String endereço = campoEndereco.getText().toString();
    	Geocoder geo = new Geocoder(getApplicationContext());

        try {
         	GeoPoint p;
            List<Address> addresses = geo.getFromLocationName(endereço, 5);
            if (addresses.size() > 0) {
                p = new GeoPoint(
                        (int) (addresses.get(0).getLatitude() * 1E6), 
                        (int) (addresses.get(0).getLongitude() * 1E6));    
                Marcador destino = new Marcador(p.getLatitudeE6() , p.getLongitudeE6() );
            
                           
                ListaMarcadorOverlay listaOverlay = new ListaMarcadorOverlay( getResources().getDrawable( R.drawable.ic_launcher ) );
                ArrayList<OverlayItem> listaLocais = new ArrayList<OverlayItem>();
                
                Marcador itemSP = new Marcador( -23625153, -46689850 );
                AreaOverlay areaOverlay = new AreaOverlay( this, itemSP , destino, 1000F);

                
                listaOverlay.setAreaOverlay( areaOverlay );
                
                listaLocais.add( new OverlayItem( itemSP, "Teste", "Apenas um teste" ) );
                listaOverlay.setListaOverlays( listaLocais );
                

                      
                
                getMapa().getOverlays().add( listaOverlay );
                getMapa().getOverlays().add( areaOverlay );
                getControle().setCenter( itemSP );
                getMapa().invalidate();

            
            
            
            
            }    
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    

	// INSIRA AQUI O METODO DE PASSAR XML
    
    
    
   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    // ALi EM CIMA

	public void mapa(View v)
    {
    	setContentView( R.layout.mapa );  	
    	
        setMapa( (MapView) findViewById( R.id.mapview ) );

    	setControle( getMapa().getController() );
        getMapa().setBuiltInZoomControls( true );
        getMapa().setSatellite( false );
        getControle().setZoom(14);
        
        ListaMarcadorOverlay listaOverlay = new ListaMarcadorOverlay( getResources().getDrawable( R.drawable.ic_launcher ) );
        
        Marcador itemSP = new Marcador(-16638919,-49280924); // brigadeiro
        
        getMapa().getOverlays().add( listaOverlay );

        getControle().setCenter( itemSP );
        getMapa().invalidate();

        
       }

//  ArrayList<OverlayItem> listaLocais = new ArrayList<OverlayItem>();	
//  Marcador destino = new Marcador( -23563596, -46653885 );
//  AreaOverlay areaOverlay = new AreaOverlay( this, itemSP , destino, 1000F);
//
//  
//  listaOverlay.setAreaOverlay( areaOverlay );
//  
//  listaLocais.add( new OverlayItem( itemSP, "Teste", "Apenas um teste" ) );
//  listaOverlay.setListaOverlays( listaLocais );
//  
//
//        
//  
//getMapa().getOverlays().add( areaOverlay );
	
//	public void mapa(View v)
//    {
//    	setContentView( R.layout.mapa );  	
//    	
//        setMapa( (MapView) findViewById( R.id.mapview ) );
//
//    	setControle( getMapa().getController() );
//        getMapa().setBuiltInZoomControls( true );
//        getMapa().setSatellite( false );
//        getControle().setZoom(14);
//        
//        ListaMarcadorOverlay listaOverlay = new ListaMarcadorOverlay( getResources().getDrawable( R.drawable.ic_launcher ) );
//        ArrayList<OverlayItem> listaLocais = new ArrayList<OverlayItem>();
//        
//        Marcador itemSP = new Marcador( -23625153, -46689850 );
//        //Marcador itemSP = new Marcador( -23563596, -46653885 );
//        AreaOverlay areaOverlay = new AreaOverlay( this, itemSP, 1000F);
//        
//        listaOverlay.setAreaOverlay( areaOverlay );
//        
//        listaLocais.add( new OverlayItem( itemSP, "Teste", "Apenas um teste" ) );
//        listaOverlay.setListaOverlays( listaLocais );
//        
//        Path line = new Path();
//        line.moveTo(-23625153, -46689850);
//        line.lineTo(-23563596, -46653885);
//        
//       
//        getMapa().getOverlays().add( listaOverlay );
//        getMapa().getOverlays().add( areaOverlay );
//        getControle().setCenter( itemSP );
//        getMapa().invalidate();
//
//        
//       }

    @Override
    public boolean onCreateOptionsMenu( Menu menu ) {
        getMenuInflater().inflate( R.menu.park_here_activity, menu );
        return true;
    }

	@Override
	protected boolean isRouteDisplayed() {
		return false;
	}
	
	public MapView getMapa() {
		return mapa;
	}

	public void setMapa( MapView mapa ) {
		this.mapa = mapa;
	}
	public void Sair(View v)
	{
		System.exit(0);
	}
	
	public void voltar(View v)
	{
		 setContentView( R.layout.park_here_activity );
	}

	public void Creditos(View v)
	{
		 setContentView( R.layout.creditos );
	}
	

	public MapController getControle() {
		return controle;
	}

	public void setControle( MapController controle ) {
		this.controle = controle;
	}

	public Context getContexto() {
		return contexto;
	}

	public void setContexto( Context contexto ) {
		this.contexto = contexto;
	}
}
